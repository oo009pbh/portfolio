"use strict";(self.webpackChunksleact_ts_front=self.webpackChunksleact_ts_front||[]).push([[942,349],{53349:(e,n,t)=>{t.r(n),t.d(n,{default:()=>f});var r=t(67294),o=t(73935);const a=t.p+"images/profile_image.jpg?45eabe7b190a8f9276de308bb96c5963";var l,i,c=t(2156);function u(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var p=c.Z.div(l||(l=u(["\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1040;\n  width: 100vw;\n  height: 100vh;\n  background-color: black;\n  opacity: 0.5;\n"]))),s=c.Z.div(i||(i=u(["\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1050;\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  outline: 0;\n\n  & .modal {\n    z-index: 1051;\n    background: white;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-width: 1000px;\n    width: 600px;\n    height: 480px;\n    border-radius: 10px;\n\n    & .modalHeader {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 20px 30px;\n      height: 120px;\n      background-color: #3C5654;\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n\n      & .ant-avatar {\n        position: absolute;\n        top: 55px;\n        left: 40px;\n      }\n      \n      & > .modalDescription {\n        position: absolute;\n        left: 200px;\n        top: 64px;\n        font-size: 18px;\n        & > p {\n          margin: 0;\n        }\n        & > p.white {\n          color: white;\n        }\n      }\n    }\n\n    \n\n    & .modalContent {\n      padding: 80px 30px 30px 40px;\n      height: 360px;\n    }\n\n    & .modalHeader > .modalCloseButton {\n      width: 30px;\n      height: 30px;\n      cursor: pointer;\n      border: 0;\n    }\n  }\n"]))),d=t(23908);const f=function(e){var n=e.isShowing,t=e.hide;return n?o.createPortal(r.createElement(r.Fragment,null,r.createElement(p,null),r.createElement(s,{onClick:t,className:"animated zoomIn faster","aria-modal":!0,"aria-hidden":!0,tabIndex:-1,role:"dialog"},r.createElement("div",{onClick:function(e){return e.stopPropagation()},className:"modal"},r.createElement("div",{className:"modalHeader"},r.createElement(d.C,{src:a,size:130}),r.createElement("div",{className:"modalDescription"},r.createElement("p",{className:"white"},"안녕하세요"),r.createElement("p",{className:"white"},"소통을 중시하고,"),r.createElement("p",null,"풀스택을 지향하고 있는"),r.createElement("p",null,"프론트엔드 개발자 박병훈입니다."))),r.createElement("div",{className:"modalContent"},r.createElement("h1",null,"ABOUT ME"),r.createElement("hr",null),r.createElement("p",null,"GitHub: https://github.com/oo009pbh"),r.createElement("p",null,"Email: oo009pbh@gmail.com"),r.createElement("p",null,"Age: 26세 (1997.11.09)"),r.createElement("p",null,"Education: 세종대학교 소프트웨어학과 (구 디지털콘텐츠)"))))),document.body):null}},98924:(e,n,t)=>{function r(){return!("undefined"==typeof window||!window.document||!window.document.createElement)}t.d(n,{Z:()=>r})},80334:(e,n,t)=>{t.d(n,{ZP:()=>a});var r={};function o(e,n){}const a=function(e,n){!function(e,n,t){n||r[t]||(e(!1,t),r[t]=!0)}(o,e,n)}},1413:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(4942);function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){(0,r.Z)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}},45987:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(63366);function o(e,n){if(null==e)return{};var t,o,a=(0,r.Z)(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}},98152:(e,n,t)=>{function r(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function o(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a=[],l=!0,i=!1;try{for(t=t.call(e);!(l=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);l=!0);}catch(e){i=!0,o=e}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return r(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}t.d(n,{Z:()=>o})},71002:(e,n,t)=>{function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}t.d(n,{Z:()=>r})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,